<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on Dgraph Blog</title>
    <link>https://blog.dgraph.io/tags/tutorial/</link>
    <description>Recent content in tutorial on Dgraph Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, Dgraph Labs, Inc. All rights reserved.</copyright>
    <lastBuildDate>Tue, 26 Nov 2019 06:30:00 -0700</lastBuildDate>
    
	<atom:link href="https://blog.dgraph.io/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting started with Dgraph tutorials series - 5: Tweet graph, string indices, and keyword-based searching</title>
      <link>https://blog.dgraph.io/post/tutorial-5-getting-started/</link>
      <pubDate>Tue, 26 Nov 2019 06:30:00 -0700</pubDate>
      
      <guid>https://blog.dgraph.io/post/tutorial-5-getting-started/</guid>
      <description>Welcome to the fifth episode of getting started with Dgraph. In the previous episode, we learned about using multi-language strings and operations on them using language tags.
In this episode, we&amp;rsquo;ll model tweets in Dgraph and, using it, we&amp;rsquo;ll learn more about string indices in Dgraph.
We&amp;rsquo;ll specifically learn about:
 Modeling tweets in Dgraph. Using String indices in Dgraph  Querying twitter users using the hash index. Comparing strings using the exact index.</description>
    </item>
    
    <item>
      <title>Getting started with Dgraph tutorials series - 4: Multi-language strings</title>
      <link>https://blog.dgraph.io/post/tutorial-4-getting-started/</link>
      <pubDate>Tue, 12 Nov 2019 06:30:00 -0700</pubDate>
      
      <guid>https://blog.dgraph.io/post/tutorial-4-getting-started/</guid>
      <description>Welcome to the fourth episode of getting started with Dgraph.
In the previous episode, we learned about Datatypes, Indexing, Filtering, and Reverse traversals in Dgraph.
In this episode, we&amp;rsquo;ll learn about using multi-language strings and operations on them using the language tags.
Strings and languages Strings values in Dgraph are of UTF-8 format. Dgraph also supports values for string predicate types in multiple languages. The multi-lingual capability is particularly useful to build features, which requires you to store the same information in multiple languages.</description>
    </item>
    
    <item>
      <title>Dgraph tutorials series - 3: Datatypes, Indexing, Filtering, and Reverse traversals.</title>
      <link>https://blog.dgraph.io/post/tutorial-3-getting-started/</link>
      <pubDate>Wed, 30 Oct 2019 06:30:00 -0700</pubDate>
      
      <guid>https://blog.dgraph.io/post/tutorial-3-getting-started/</guid>
      <description>Welcome to the third episode of getting started with Dgraph. In the previous episode of the tutorial, we learned about the CRUD operations using UIDs. We also learned about traversals and recursive traversals.
In this tutorial, we&amp;rsquo;ll learn about Dgraph&amp;rsquo;s basic types and how to query for them. Specifically, we&amp;rsquo;ll learn about:
 Basic data types in Dgraph. Querying for predicate values. Indexing. Filtering nodes. Traversing in reverse direction.  Let&amp;rsquo;s start by building the following graph of a simple blog application.</description>
    </item>
    
    <item>
      <title>Dgraph tutorials series - 2: UID operations, updating nodes, and traversals</title>
      <link>https://blog.dgraph.io/post/tutorial-2-getting-started/</link>
      <pubDate>Tue, 15 Oct 2019 14:30:00 +0530</pubDate>
      
      <guid>https://blog.dgraph.io/post/tutorial-2-getting-started/</guid>
      <description>Welcome to the second episode of getting started with Dgraph. In the last episode of the tutorial, we learned some of the basics of Dgraph. Including how to run the database, add new nodes and predicates, and query them back.
In this episode, we&amp;rsquo;ll build the above Graph and learn more about operations using the UID (Universal Identifier) of the nodes. Specifically, we&amp;rsquo;ll learn about:
 Querying and updating nodes, deleting predicates using their UIDs.</description>
    </item>
    
    <item>
      <title>Dgraph tutorials series - 1: Getting started</title>
      <link>https://blog.dgraph.io/post/tutorial-1-getting-started/</link>
      <pubDate>Tue, 01 Oct 2019 14:30:00 +0530</pubDate>
      
      <guid>https://blog.dgraph.io/post/tutorial-1-getting-started/</guid>
      <description>Welcome to getting started with Dgraph. Dgraph is an open-source, transactional, distributed, native Graph Database. Here is the first episode of the tutorial series on using Dgraph.
In this tutorial, we&amp;rsquo;ll learn how to build the following graph on Dgraph,
In the process, we&amp;rsquo;ll learn about:
 Running Dgraph using the dgraph/standalone docker image. Running the following basic operations using Dgraph&amp;rsquo;s UI Ratel,  Creating a node. Creating an edge between two nodes.</description>
    </item>
    
    <item>
      <title>Building a To-Do List React App with Dgraph</title>
      <link>https://blog.dgraph.io/post/building-todo-list-react-dgraph/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +1100</pubDate>
      
      <guid>https://blog.dgraph.io/post/building-todo-list-react-dgraph/</guid>
      <description>In this tutorial we will build a To-Do List application using React JavaScript library and Dgraph as a backend database. We will use dgraph-js-http &amp;mdash; a library designed to greatly simplify the life of JavaScript developers when accessing Dgraph databases.
The tutorial is split into several steps:
 Creating a React App
 Starting a local Dgraph server using docker-compose
 Connecting to Dgraph from JavaScript and fetching data</description>
    </item>
    
  </channel>
</rss>