<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Dgraph Blog</title>
    <link>https://blog.dgraph.io/tags/go/</link>
    <description>Recent content in Go on Dgraph Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, Dgraph Labs, Inc. All rights reserved.</copyright>
    <lastBuildDate>Wed, 03 Apr 2019 00:06:20 -0800</lastBuildDate>
    
	<atom:link href="https://blog.dgraph.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Access Control Works in Dgraph</title>
      <link>https://blog.dgraph.io/post/access-control-in-dgraph/</link>
      <pubDate>Wed, 03 Apr 2019 00:06:20 -0800</pubDate>
      
      <guid>https://blog.dgraph.io/post/access-control-in-dgraph/</guid>
      <description>With GDPR passing in the EU on April 14th, 2016, users on the Internet are demanding protection of their privacy and data from Internet companies. The regulation has profound implications. Many companies take the law and users&amp;rsquo; demand seriously: they start encrypting data for traffic within their data centers, and employing strict control on who can access users&amp;rsquo; data. The Dgraph team takes full notice of that. Access control on the data stored in Dgraph is very important to our enterprise customers.</description>
    </item>
    
    <item>
      <title>The State of Caching in Go</title>
      <link>https://blog.dgraph.io/post/caching-in-go/</link>
      <pubDate>Thu, 07 Mar 2019 15:30:00 -0800</pubDate>
      
      <guid>https://blog.dgraph.io/post/caching-in-go/</guid>
      <description>This post made it to the top of Golang subreddit and is trending #2 on the front page of Hacker News. Do engage in discussion there and show us love by giving us a GitHub star.
Every database system requires a smart cache. That is, a cache that keeps the most frequently or recently accessed items and has a configurable memory utilization limit.
Being a graph database, Dgraph can access thousands&amp;mdash;even millions&amp;mdash;of keys per query, depending upon the number of intermediate results.</description>
    </item>
    
    <item>
      <title>Optimizing Indexing in Dgraph</title>
      <link>https://blog.dgraph.io/post/indexing-in-dgraph/</link>
      <pubDate>Tue, 29 Jan 2019 12:00:00 -0800</pubDate>
      
      <guid>https://blog.dgraph.io/post/indexing-in-dgraph/</guid>
      <description>One of the cornerstones of Dgraph is that it allows a flexible schema, which can be modified in a live system, without any downtime. This involves changing data types and adding or removing indices with a single ALTER command to match the needs of an application developer.
Dgraph supports indexing natively, which means common use cases around full-text search, regular expressions, date matching, geolocation queries, etc. can all be executed within Dgraph, while maintaining transactional guarantees.</description>
    </item>
    
  </channel>
</rss>