<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>indexing on Dgraph Blog</title>
    <link>https://blog.dgraph.io/tags/indexing/</link>
    <description>Recent content in indexing on Dgraph Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2017, Dgraph Labs, Inc. All rights reserved.</copyright>
    <lastBuildDate>Thu, 08 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.dgraph.io/tags/indexing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Datetime Indexes in Dgraph</title>
      <link>https://blog.dgraph.io/post/datetime-indexes-dgraph/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dgraph.io/post/datetime-indexes-dgraph/</guid>
      <description>I recently started working at Dgraph Labs in Bengaluru as a Software Engineer. One of the first issues that I worked on was related to the Dgraph&amp;rsquo;s datetime datatype. This article covers how I discovered and resolved the issue. The article assumes a basic understanding of Dgraph, but you can learn everything you need in docs.dgraph.io.
Bug Discovery While working on Flock, I observed that timestamp comparisons were not working correctly in Dgraph when the data or query had timezone information in it.</description>
    </item>
    
    <item>
      <title>Optimizing Indexing in Dgraph</title>
      <link>https://blog.dgraph.io/post/indexing-in-dgraph/</link>
      <pubDate>Tue, 29 Jan 2019 12:00:00 -0800</pubDate>
      
      <guid>https://blog.dgraph.io/post/indexing-in-dgraph/</guid>
      <description>One of the cornerstones of Dgraph is that it allows a flexible schema, which can be modified in a live system, without any downtime. This involves changing data types and adding or removing indices with a single ALTER command to match the needs of an application developer.
Dgraph supports indexing natively, which means common use cases around full-text search, regular expressions, date matching, geolocation queries, etc. can all be executed within Dgraph, while maintaining transactional guarantees.</description>
    </item>
    
  </channel>
</rss>