[{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1581690600,"objectID":"","permalink":"https://blog.dgraph.io/tags/devrel/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/devrel/","section":"tags","summary":"","tags":null,"title":"DevRel","type":"tags","url":"/tags/devrel/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"home","lang":"en","lastmod":1581690600,"objectID":"","permalink":"https://blog.dgraph.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Dgraph Blog","type":"page","url":"/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3500,"image":"tutorials/8/cover.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1581690600,"objectID":"926012305ede428b2f055023792fec66","permalink":"https://blog.dgraph.io/post/tutorial-8-getting-started/","publishdate":"2020-02-14T20:00:00+05:30","readingtime":17,"relpermalink":"/post/tutorial-8-getting-started/","section":"post","summary":"Welcome to the eighth episode of getting started with Dgraph.\nIn the previous episode, we learned about building a twitter-like user-search feature using Dgraph\u0026rsquo;s fuzzy search.\nIn this episode, we\u0026rsquo;ll build a graph of tourist locations around San Francisco and help our Zoologist friend, Mary, and her team in their mission to conserve birds using Dgraph\u0026rsquo;s geolocation capabilities.\nYou might have used Google to find the restaurants near you or to find the shopping centres within a mile of your current location.","tags":["tutorial","DevRel"],"title":"Getting started with Dgraph-8: Easily build location-aware apps using our native geolocation features","type":"post","url":"/post/tutorial-8-getting-started/","weight":0,"wordcount":3410},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"section","lang":"en","lastmod":1581690600,"objectID":"","permalink":"https://blog.dgraph.io/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1581690600,"objectID":"","permalink":"https://blog.dgraph.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1581690600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1581690600,"objectID":"","permalink":"https://blog.dgraph.io/tags/tutorial/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tutorial/","section":"tags","summary":"","tags":null,"title":"Tutorial","type":"tags","url":"/tags/tutorial/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1579273200,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1700,"image":"tutorials/7/cover.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1579273200,"objectID":"d75ea8764d6e453fdb8bb017ded7f8b9","permalink":"https://blog.dgraph.io/post/tutorial-7-getting-started/","publishdate":"2020-01-17T20:30:00+05:30","readingtime":8,"relpermalink":"/post/tutorial-7-getting-started/","section":"post","summary":"Welcome to the seventh episode of getting started with Dgraph. In the previous episode, we learned about building advanced text searches on social graphs in Dgraph, by modeling tweets as an example. We queried the tweets using the full-text and trigram indices and implemented full-text and regular-expression based search on the tweets.\nIn this tutorial, we\u0026rsquo;ll continue exploring Dgraph\u0026rsquo;s string querying capabilities using the twitter model from the fifth and the sixth tutorial.","tags":["tutorial","DevRel"],"title":"Getting started with Dgraph tutorials series - 7: Give your users powerful search results with fuzzy search on graph","type":"post","url":"/post/tutorial-7-getting-started/","weight":0,"wordcount":1658},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1578499200,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1578499200,"objectID":"","permalink":"https://blog.dgraph.io/tags/dgraph/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dgraph/","section":"tags","summary":"","tags":null,"title":"Dgraph","type":"tags","url":"/tags/dgraph/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1578499200,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":600,"image":"the-first-step.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1578499200,"objectID":"558173d2eed636fbbb204bf77fd38836","permalink":"https://blog.dgraph.io/post/introducing-getting-started-series/","publishdate":"2020-01-08T21:30:00+05:30","readingtime":3,"relpermalink":"/post/introducing-getting-started-series/","section":"post","summary":"We are excited to announce that the \u0026ldquo;Get Started with Dgraph\u0026rdquo; of our documentation site now includes the episodes from our getting started blog series.\nThis blog series consists of various tutorials that are helpful for both beginners and intermediates to get started with Dgraph and to understand the product functionalities better.\nAt the time of writing, we’ve published six tutorial episodes, and you can find all of them on the docs.","tags":["DevRel","Dgraph","Tutorial"],"title":"What’s Next? Learn Dgraph with the Getting-Started Blog Series","type":"post","url":"/post/introducing-getting-started-series/","weight":0,"wordcount":526},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1576594800,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1576594800,"objectID":"","permalink":"https://blog.dgraph.io/tags/release/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/release/","section":"tags","summary":"","tags":null,"title":"Release","type":"tags","url":"/tags/release/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1576594800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1600,"image":"release-v1.1.1.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1576594800,"objectID":"8ed8ef0d5d5a4b3546345b4d336a9b3c","permalink":"https://blog.dgraph.io/post/release-v1.1.1/","publishdate":"2019-12-17T07:00:00-08:00","readingtime":8,"relpermalink":"/post/release-v1.1.1/","section":"post","summary":"It\u0026rsquo;s been a bit over three months since we released Dgraph v1.1.0 (see the announcement) but the wait and hard work were well worth it because today we announce that Dgraph v1.1.1 is released!\nThis blog post will cover the biggest changes since v1.1.0, including new features, bug fixes, and other improvements.\nFor those in a hurry, these are the changes covered in this article.\n Breaking changes  Removing expand _reverse_ and _forward_ No more @type directive  New features  Use @cascade and @normalize anywhere Improved support for upsert blocks Changes on types Better facets Transparent data encryption   Breaking changes While this is not a patch release, to fix some of the issues identified with v1.","tags":["Release","DevRel"],"title":"Releasing Dgraph v1.1.1: upsert blocks, facets, and encryption at rest","type":"post","url":"/post/release-v1.1.1/","weight":0,"wordcount":1597},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1576026000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2200,"image":"tutorials/6/cover.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1576026000,"objectID":"f8e846ad5335d24e30d1f119427dc6e8","permalink":"https://blog.dgraph.io/post/tutorial-6-getting-started/","publishdate":"2019-12-11T06:30:00+05:30","readingtime":11,"relpermalink":"/post/tutorial-6-getting-started/","section":"post","summary":"Welcome to the sixth episode of getting started with Dgraph.\nIn the previous episode, we learned about building social graphs in Dgraph, by modeling tweets as an example. We queried the tweets using the hash and exact indices, and implemented a keyword-based search to find your favorite tweets using the term index and its functions.\nIn this tutorial, we\u0026rsquo;ll continue from where we left off and learn about advanced text search features in Dgraph.","tags":["tutorial","DevRel"],"title":"Getting started with Dgraph tutorials series - 6: Advanced text search on social graphs ","type":"post","url":"/post/tutorial-6-getting-started/","weight":0,"wordcount":2193},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1575968400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575968400,"objectID":"","permalink":"https://blog.dgraph.io/tags/graphql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/graphql/","section":"tags","summary":"","tags":null,"title":"GraphQL","type":"tags","url":"/tags/graphql/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1575968400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"graphql-summit-19-1.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1575968400,"objectID":"fffb4b9ba5b167d81e7b8d7883f4d906","permalink":"https://blog.dgraph.io/post/graphql-summit-19/","publishdate":"2019-12-10T14:30:00+05:30","readingtime":7,"relpermalink":"/post/graphql-summit-19/","section":"post","summary":"We took part in the recently held GraphQL Summit in San Francisco.\nThe conference was exciting, and it had a great line up of talks. As expected, the enthusiasm in the GraphQL community was unmatchable.\nWe took part as one of the platinum sponsors of the event, and we also unveiled the new GraphQL API for Dgraph. Read along as we share our experience at the event as it unfolded.","tags":["graphql","DevRel"],"title":"The GraphQL Summit story","type":"post","url":"/post/graphql-summit-19/","weight":0,"wordcount":1407},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1574775000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3000,"image":"tutorials/5/cover.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1574775000,"objectID":"dc10cc0ad7cf02afb561ebc71cac7c30","permalink":"https://blog.dgraph.io/post/tutorial-5-getting-started/","publishdate":"2019-11-26T06:30:00-07:00","readingtime":14,"relpermalink":"/post/tutorial-5-getting-started/","section":"post","summary":"Welcome to the fifth episode of getting started with Dgraph. In the previous episode, we learned about using multi-language strings and operations on them using language tags.\nIn this episode, we\u0026rsquo;ll model tweets in Dgraph and, using it, we\u0026rsquo;ll learn more about string indices in Dgraph.\nWe\u0026rsquo;ll specifically learn about:\n Modeling tweets in Dgraph. Using String indices in Dgraph  Querying twitter users using the hash index. Comparing strings using the exact index.","tags":["tutorial","DevRel"],"title":"Getting started with Dgraph tutorials series - 5: Tweet graph, string indices, and keyword-based searching","type":"post","url":"/post/tutorial-5-getting-started/","weight":0,"wordcount":2930},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1574083800,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1574083800,"objectID":"","permalink":"https://blog.dgraph.io/tags/badger/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/badger/","section":"tags","summary":"","tags":null,"title":"Badger","type":"tags","url":"/tags/badger/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1574083800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":800,"image":"badger2.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1574083800,"objectID":"2fa8ae601af210f97a8c62449a751fdd","permalink":"https://blog.dgraph.io/post/releasing-badger-v2/","publishdate":"2019-11-18T06:30:00-07:00","readingtime":4,"relpermalink":"/post/releasing-badger-v2/","section":"post","summary":"Dgraph is an open-source, transactional, distributed, native Graph database. Dgraph is optimized for high-performance reads and writes. It can serve queries and mutations with low latency and high throughput, even when they involve deep joins and traversals.\nMuch of Dgraph\u0026rsquo;s advanced performance capabilities come from Badger. Badger is the embedded key-value store that is responsible for storing all of Dgraph\u0026rsquo;s data.\nBadger itself is not distributed, Dgraph implements a layer on top of it to provide the distributed capabilities.","tags":["Badger","DevRel"],"title":"Releasing BadgerDB v2.0","type":"post","url":"/post/releasing-badger-v2/","weight":0,"wordcount":730},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1573565400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1700,"image":"tutorials/4/andromeda.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1573565400,"objectID":"1d82de7bbf3ab1261c614cf988eeabd0","permalink":"https://blog.dgraph.io/post/tutorial-4-getting-started/","publishdate":"2019-11-12T06:30:00-07:00","readingtime":8,"relpermalink":"/post/tutorial-4-getting-started/","section":"post","summary":"Welcome to the fourth episode of getting started with Dgraph.\nIn the previous episode, we learned about Datatypes, Indexing, Filtering, and Reverse traversals in Dgraph.\nIn this episode, we\u0026rsquo;ll learn about using multi-language strings and operations on them using the language tags.\nStrings and languages Strings values in Dgraph are of UTF-8 format. Dgraph also supports values for string predicate types in multiple languages. The multi-lingual capability is particularly useful to build features, which requires you to store the same information in multiple languages.","tags":["tutorial","DevRel"],"title":"Getting started with Dgraph tutorials series - 4: Multi-language strings","type":"post","url":"/post/tutorial-4-getting-started/","weight":0,"wordcount":1657},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1572442200,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2900,"image":"tutorials/1/kepler.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1572442200,"objectID":"996fe15f99d6b7ced63280ac28b08078","permalink":"https://blog.dgraph.io/post/tutorial-3-getting-started/","publishdate":"2019-10-30T06:30:00-07:00","readingtime":14,"relpermalink":"/post/tutorial-3-getting-started/","section":"post","summary":"Welcome to the third episode of getting started with Dgraph. In the previous episode of the tutorial, we learned about the CRUD operations using UIDs. We also learned about traversals and recursive traversals.\nIn this tutorial, we\u0026rsquo;ll learn about Dgraph\u0026rsquo;s basic types and how to query for them. Specifically, we\u0026rsquo;ll learn about:\n Basic data types in Dgraph. Querying for predicate values. Indexing. Filtering nodes. Traversing in reverse direction.  Let\u0026rsquo;s start by building the following graph of a simple blog application.","tags":["tutorial","DevRel"],"title":"Dgraph tutorials series - 3: Datatypes, Indexing, Filtering, and Reverse traversals.","type":"post","url":"/post/tutorial-3-getting-started/","weight":0,"wordcount":2883},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1572340393,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":4100,"image":"dgraph-graphql-sticker.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1572340393,"objectID":"ed4fca7344e4c542cc446712829eb760","permalink":"https://blog.dgraph.io/post/building-native-graphql-database-dgraph/","publishdate":"2019-10-29T02:13:13-07:00","readingtime":20,"relpermalink":"/post/building-native-graphql-database-dgraph/","section":"post","summary":"\u0026ldquo;GraphQL is not a Graph DB query language \u0026mdash; it\u0026rsquo;s a replacement for REST APIs.\u0026rdquo;\n That\u0026rsquo;s my standard opening statement whenever talking about Dgraph\u0026rsquo;s choice of the query language.\nMost people who don\u0026rsquo;t know GraphQL assume it\u0026rsquo;s a graph database query language. Most people who know GraphQL wonder how a graph database is being powered by it.\nOur focus at Dgraph has always been on helping you build apps using an amazingly advanced graph database.","tags":["GraphQL"],"title":"Building a Native GraphQL Database: Challenges, Learnings and Future","type":"post","url":"/post/building-native-graphql-database-dgraph/","weight":0,"wordcount":4077},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1571130000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1400,"image":"tutorials/2/banner.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1571130000,"objectID":"383d5870958c2d9d39f3f14eb1c267e6","permalink":"https://blog.dgraph.io/post/tutorial-2-getting-started/","publishdate":"2019-10-15T14:30:00+05:30","readingtime":7,"relpermalink":"/post/tutorial-2-getting-started/","section":"post","summary":"Welcome to the second episode of getting started with Dgraph. In the last episode of the tutorial, we learned some of the basics of Dgraph. Including how to run the database, add new nodes and predicates, and query them back.\nIn this episode, we\u0026rsquo;ll build the above Graph and learn more about operations using the UID (Universal Identifier) of the nodes. Specifically, we\u0026rsquo;ll learn about:\n Querying and updating nodes, deleting predicates using their UIDs.","tags":["tutorial","DevRel"],"title":"Dgraph tutorials series - 2: UID operations, updating nodes, and traversals","type":"post","url":"/post/tutorial-2-getting-started/","weight":0,"wordcount":1384},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1569920400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1100,"image":"tutorials/1/kepler.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1569920400,"objectID":"e09bb993cb548dd575c0f13c4f247e0d","permalink":"https://blog.dgraph.io/post/tutorial-1-getting-started/","publishdate":"2019-10-01T14:30:00+05:30","readingtime":5,"relpermalink":"/post/tutorial-1-getting-started/","section":"post","summary":"Welcome to getting started with Dgraph. Dgraph is an open-source, transactional, distributed, native Graph Database. Here is the first episode of the tutorial series on using Dgraph.\nIn this tutorial, we\u0026rsquo;ll learn how to build the following graph on Dgraph,\nIn the process, we\u0026rsquo;ll learn about:\n Running Dgraph using the dgraph/standalone docker image. Running the following basic operations using Dgraph\u0026rsquo;s UI Ratel,  Creating a node. Creating an edge between two nodes.","tags":["tutorial","DevRel"],"title":"Dgraph tutorials series - 1: Getting started","type":"post","url":"/post/tutorial-1-getting-started/","weight":0,"wordcount":1021},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1568959993,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568959993,"objectID":"","permalink":"https://blog.dgraph.io/tags/cache/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cache/","section":"tags","summary":"","tags":null,"title":"Cache","type":"tags","url":"/tags/cache/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1568959993,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568959993,"objectID":"","permalink":"https://blog.dgraph.io/tags/go/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/go/","section":"tags","summary":"","tags":null,"title":"Go","type":"tags","url":"/tags/go/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1568959993,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568959993,"objectID":"","permalink":"https://blog.dgraph.io/tags/hacker-news/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hacker-news/","section":"tags","summary":"","tags":null,"title":"Hacker News","type":"tags","url":"/tags/hacker-news/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1568959993,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3600,"image":"ristretto-3.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1568959993,"objectID":"273a869791b4a0b5e10d94293c4b7fbe","permalink":"https://blog.dgraph.io/post/introducing-ristretto-high-perf-go-cache/","publishdate":"2019-09-19T23:13:13-07:00","readingtime":17,"relpermalink":"/post/introducing-ristretto-high-perf-go-cache/","section":"post","summary":"This post made it to the top of Golang subreddit and is trending in top 10 on the front page of Hacker News. Do engage in discussion there and show us love by giving us a star.\nWith over six months of research and development, we\u0026rsquo;re proud to announce the initial release of Ristretto: A High Performance, Concurrent, Memory-Bound Go cache. It is contention-proof, scales well and provides consistently high hit-ratios.","tags":["Cache","Go","Hacker News","Reddit"],"title":"Introducing Ristretto: A High-Performance Go Cache","type":"post","url":"/post/introducing-ristretto-high-perf-go-cache/","weight":0,"wordcount":3550},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1568959993,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568959993,"objectID":"","permalink":"https://blog.dgraph.io/tags/reddit/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/reddit/","section":"tags","summary":"","tags":null,"title":"Reddit","type":"tags","url":"/tags/reddit/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1567598400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1300,"image":"release-v1.1.0.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1567598400,"objectID":"af0839078432d6ca844cb2e48519a57f","permalink":"https://blog.dgraph.io/post/release-v1.1.0/","publishdate":"2019-09-04T08:00:00-04:00","readingtime":6,"relpermalink":"/post/release-v1.1.0/","section":"post","summary":"Dgraph is an open-source, transactional, distributed, native graph database. Ever since the internet explosion, the data not just has been growing in size, but also in its complexity and connectedness. Dgraph is built as an effort to enable and simplify the development of scalable cloud applications that could continue to thrive even when the data is highly connected and involved.\nSet on this path, embracing open source all along the way, the first production-ready, major release v1.","tags":["Release","DevRel"],"title":"Releasing Dgraph v1.1.0","type":"post","url":"/post/release-v1.1.0/","weight":0,"wordcount":1236},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1566572400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":400,"image":"hiring-19.png","keywords":null,"kind":"page","lang":"en","lastmod":1566572400,"objectID":"0a1a2994bdf507c1170c3c75e4a84baa","permalink":"https://blog.dgraph.io/post/hiring-19/","publishdate":"2019-08-23T08:00:00-07:00","readingtime":2,"relpermalink":"/post/hiring-19/","section":"post","summary":"We recently announced our successful Series A fundraise and, since then, many people have shown interest to join our team. We are very grateful to have so many people interested in joining our team!\nWe also realized that the job openings were neither really up to date nor covered all of the roles that we are looking for. This is why we decided to spend some time rewriting them and the result is these six new job openings!","tags":null,"title":"Dgraph Labs wants you!","type":"post","url":"/post/hiring-19/","weight":0,"wordcount":369},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1565946000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1200,"image":"graphqlconf-19-4.JPG","keywords":null,"kind":"page","lang":"en","lastmod":1565946000,"objectID":"9e555508432bb035efeff33fa86be7da","permalink":"https://blog.dgraph.io/post/graphql-conf-19/","publishdate":"2019-08-16T14:30:00+05:30","readingtime":6,"relpermalink":"/post/graphql-conf-19/","section":"post","summary":"We took part in the recently held GraphQL conference in Berlin. The experience was fascinating, and we were amazed by the high voltage enthusiasm in the GraphQL community. Now, we couldn\u0026rsquo;t help ourselves from sharing this with Dgraph\u0026rsquo;s community! This is the story of the GraphQL conference in Berlin.\nThe GraphQL connection If you\u0026rsquo;re wondering what does Dgraph has to do with GraphQL, here\u0026rsquo;s the answer. Dgraph had set its eyes and placed its bet on GraphQL very early.","tags":["GraphQL","GraphQLConf","DevRel"],"title":"Dgraph's recap of GraphQL Conf - Berlin 2019","type":"post","url":"/post/graphql-conf-19/","weight":0,"wordcount":1118},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1565946000,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1565946000,"objectID":"","permalink":"https://blog.dgraph.io/tags/graphqlconf/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/graphqlconf/","section":"tags","summary":"","tags":null,"title":"GraphQLConf","type":"tags","url":"/tags/graphqlconf/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1565222400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1300,"image":"candle.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1565222400,"objectID":"23d8f03e0aac0a92cc4c9172560d8abc","permalink":"https://blog.dgraph.io/post/datetime-indexes-dgraph/","publishdate":"2019-08-08T00:00:00Z","readingtime":7,"relpermalink":"/post/datetime-indexes-dgraph/","section":"post","summary":"I recently started working at Dgraph Labs in Bengaluru as a Software Engineer. One of the first issues that I worked on was related to the Dgraph\u0026rsquo;s datetime datatype. This article covers how I discovered and resolved the issue. The article assumes a basic understanding of Dgraph, but you can learn everything you need in docs.dgraph.io.\nBug Discovery While working on Flock, I observed that timestamp comparisons were not working correctly in Dgraph when the data or query had timezone information in it.","tags":["Dgraph","Indexing","Engineering","Go"],"title":"Datetime Indexes in Dgraph","type":"post","url":"/post/datetime-indexes-dgraph/","weight":0,"wordcount":1296},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1565222400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1565222400,"objectID":"","permalink":"https://blog.dgraph.io/tags/engineering/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/engineering/","section":"tags","summary":"","tags":null,"title":"Engineering","type":"tags","url":"/tags/engineering/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1565222400,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1565222400,"objectID":"","permalink":"https://blog.dgraph.io/tags/indexing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/indexing/","section":"tags","summary":"","tags":null,"title":"Indexing","type":"tags","url":"/tags/indexing/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1564574705,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3500,"image":"moonshot.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1564574705,"objectID":"ff38ab11538c0569e9813940134bc420","permalink":"https://blog.dgraph.io/post/how-dgraph-labs-raised-series-a/","publishdate":"2019-07-31T05:05:05-07:00","readingtime":17,"relpermalink":"/post/how-dgraph-labs-raised-series-a/","section":"post","summary":"The blog post by ZDNet made it to HackerNews front page. Do engage in discussion there, and show us love by giving us a GitHub star.\nI\u0026rsquo;m really excited to announce that Dgraph has raised $11.5M in Series A funding. This round is led by Redpoint Ventures, with investment from our previous lead, Bain Capital Ventures, and participation from all our existing investors \u0026ndash; Blackbird, Grok and AirTree. With this round, Satish Dharmaraj joins Dgraph\u0026rsquo;s board of directors, which includes Salil Deshpande from Bain and myself.","tags":null,"title":"How Dgraph Labs Raised Series A","type":"post","url":"/post/how-dgraph-labs-raised-series-a/","weight":0,"wordcount":3433},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1563220385,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":700,"image":"10k-image.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1563220385,"objectID":"df35555502360bdcac60dc8c09ab4480","permalink":"https://blog.dgraph.io/post/10k-github-stars/","publishdate":"2019-07-16T01:23:05+05:30","readingtime":4,"relpermalink":"/post/10k-github-stars/","section":"post","summary":"Dgraph is celebrating the milestone of reaching 10,000 GitHub stars 🎉.\nThis wouldn\u0026rsquo;t have happened without all of you, so we want to thank the awesome community for being with us all the way along. This milestone comes at an exciting time for Dgraph.\nLet\u0026rsquo;s do quick time-travel through our journey, gaze at our milestones, and wrap it up with a glance through the exciting things in the pipeline.","tags":["Dgraph","DevRel","GitHub"],"title":"Celebrating 10,000 GitHub Stars","type":"post","url":"/post/10k-github-stars/","weight":0,"wordcount":697},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1563220385,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1563220385,"objectID":"","permalink":"https://blog.dgraph.io/tags/github/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/github/","section":"tags","summary":"","tags":null,"title":"GitHub","type":"tags","url":"/tags/github/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1562176800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1100,"image":"landing-soyuz.png","keywords":null,"kind":"page","lang":"en","lastmod":1562176800,"objectID":"69d5fcd2465ad3e395d799efc689e4c4","permalink":"https://blog.dgraph.io/post/badger-v1.6.0-release/","publishdate":"2019-07-03T11:00:00-07:00","readingtime":6,"relpermalink":"/post/badger-v1.6.0-release/","section":"post","summary":"\u003cp\u003eIt\u0026rsquo;s been almost a years since BadgerDB v1.5.0 was released. While both the\nproject and the community surrounding it have changed a lot, not many new\nreleases have seen the light of the day.  Happily, this changes today, as we\nrelease BadgerDB v1.6.0 and announce our plans for BadgerDB v2 coming out next\nweek!\u003c/p\u003e","tags":["Badger","Release"],"title":"Releasing BadgerDB v1.6.0","type":"post","url":"/post/badger-v1.6.0-release/","weight":0,"wordcount":1069},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1561597580,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1900,"image":"badger-evolution.png","keywords":null,"kind":"page","lang":"en","lastmod":1561597580,"objectID":"0cc3912bdbd53a12bb090c34f5961de8","permalink":"https://blog.dgraph.io/post/serialization-versioning/","publishdate":"2019-06-27T12:06:20+11:00","readingtime":9,"relpermalink":"/post/serialization-versioning/","section":"post","summary":"A little bit over a month I joined Dgraph Labs, a really cool tiny startup based (mostly) in San Francisco and Bangalore building what we believe is the next generation of Graph Databases. Marketing spiel aside, I joined because the company is coming up with some really cool tech that benefits more than Graph Database users since all the pieces of the stack are open-sourced on github.com/dgraph-io.\nOne of these pieces is BadgerDB, a key-value store written completely in Go following the ideas of RocksDB and LSM trees.","tags":["Badger","Go"],"title":"Semantic Versioning, Go Modules, and Databases","type":"post","url":"/post/serialization-versioning/","weight":0,"wordcount":1824},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1559203680,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2300,"image":"migration.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1559203680,"objectID":"1ee62bada6b276c9fd6e2ce2c5b034f0","permalink":"https://blog.dgraph.io/post/migrating-from-sql-to-dgraph/","publishdate":"2019-05-30T00:08:00-08:00","readingtime":11,"relpermalink":"/post/migrating-from-sql-to-dgraph/","section":"post","summary":"Dgraph is rapidly gaining reputation as an easy to use database to build apps upon. Many new users of Dgraph have existing relational databases that they want to migrate from. In particular, we get asked a lot about how to migrate data from MySQL to Dgraph. In this article, we present a tool that makes this migration really easy: all a user needs to do is write a small 3 lines configuration file and type in 2 commands.","tags":["Dgraph","SQL","migration"],"title":"Migrating data from SQL to Dgraph","type":"post","url":"/post/migrating-from-sql-to-dgraph/","weight":0,"wordcount":2233},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1559203680,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1559203680,"objectID":"","permalink":"https://blog.dgraph.io/tags/sql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sql/","section":"tags","summary":"","tags":null,"title":"SQL","type":"tags","url":"/tags/sql/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1559203680,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1559203680,"objectID":"","permalink":"https://blog.dgraph.io/tags/migration/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/migration/","section":"tags","summary":"","tags":null,"title":"migration","type":"tags","url":"/tags/migration/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1555506000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2400,"image":"react-todomvc/react-localstore.png","keywords":null,"kind":"page","lang":"en","lastmod":1555506000,"objectID":"32a841759ebc1c305810b166cb1d6d4c","permalink":"https://blog.dgraph.io/post/building-todo-list-react-dgraph/","publishdate":"2019-04-18T00:00:00+11:00","readingtime":12,"relpermalink":"/post/building-todo-list-react-dgraph/","section":"post","summary":"In this tutorial we will build a To-Do List application using React JavaScript library and Dgraph as a backend database. We will use dgraph-js-http \u0026mdash; a library designed to greatly simplify the life of JavaScript developers when accessing Dgraph databases.\nThe tutorial is split into several steps:\n Creating a React App\n Starting a local Dgraph server using docker-compose\n Connecting to Dgraph from JavaScript and fetching data","tags":["JavaScript","React","Tutorial"],"title":"Building a To-Do List React App with Dgraph","type":"post","url":"/post/building-todo-list-react-dgraph/","weight":0,"wordcount":2352},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1555506000,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1555506000,"objectID":"","permalink":"https://blog.dgraph.io/tags/javascript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/javascript/","section":"tags","summary":"","tags":null,"title":"JavaScript","type":"tags","url":"/tags/javascript/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1555506000,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1555506000,"objectID":"","permalink":"https://blog.dgraph.io/tags/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react/","section":"tags","summary":"","tags":null,"title":"React","type":"tags","url":"/tags/react/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1554278780,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1554278780,"objectID":"","permalink":"https://blog.dgraph.io/tags/acl/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/acl/","section":"tags","summary":"","tags":null,"title":"ACL","type":"tags","url":"/tags/acl/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1554278780,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1800,"image":"starshine-2.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1554278780,"objectID":"8df160d832632ad802d463b71299feca","permalink":"https://blog.dgraph.io/post/access-control-in-dgraph/","publishdate":"2019-04-03T00:06:20-08:00","readingtime":9,"relpermalink":"/post/access-control-in-dgraph/","section":"post","summary":"With GDPR passing in the EU on April 14th, 2016, users on the Internet are demanding protection of their privacy and data from Internet companies. The regulation has profound implications. Many companies take the law and users\u0026rsquo; demand seriously: they start encrypting data for traffic within their data centers, and employing strict control on who can access users\u0026rsquo; data. The Dgraph team takes full notice of that. Access control on the data stored in Dgraph is very important to our enterprise customers.","tags":["Dgraph","ACL","Go"],"title":"How Access Control Works in Dgraph","type":"post","url":"/post/access-control-in-dgraph/","weight":0,"wordcount":1754},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1552001400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2200,"image":"ristretto.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1552001400,"objectID":"158d64b0d6ee68f0210b38819dd0c214","permalink":"https://blog.dgraph.io/post/caching-in-go/","publishdate":"2019-03-07T15:30:00-08:00","readingtime":10,"relpermalink":"/post/caching-in-go/","section":"post","summary":"Since writing this post, we have built Ristretto: A High Performance Go cache. Read all about it here.\nThis post made it to the top of Golang subreddit and is trending #2 on the front page of Hacker News. Do engage in discussion there and show us love by giving us a GitHub star.\nEvery database system requires a smart cache. That is, a cache that keeps the most frequently or recently accessed items and has a configurable memory utilization limit.","tags":["Go","Cache","Reddit","Hacker News"],"title":"The State of Caching in Go","type":"post","url":"/post/caching-in-go/","weight":0,"wordcount":2130},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1550116140,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550116140,"objectID":"","permalink":"https://blog.dgraph.io/tags/freebase/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/freebase/","section":"tags","summary":"","tags":null,"title":"Freebase","type":"tags","url":"/tags/freebase/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1550116140,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550116140,"objectID":"","permalink":"https://blog.dgraph.io/tags/google/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/google/","section":"tags","summary":"","tags":null,"title":"Google","type":"tags","url":"/tags/google/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1550116140,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550116140,"objectID":"","permalink":"https://blog.dgraph.io/tags/knowledge-graph/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/knowledge-graph/","section":"tags","summary":"","tags":null,"title":"Knowledge Graph","type":"tags","url":"/tags/knowledge-graph/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1550116140,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550116140,"objectID":"","permalink":"https://blog.dgraph.io/tags/metaweb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metaweb/","section":"tags","summary":"","tags":null,"title":"Metaweb","type":"tags","url":"/tags/metaweb/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1550116140,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":4500,"image":"google-kg2.png","keywords":null,"kind":"page","lang":"en","lastmod":1550116140,"objectID":"05e9b029b6fd8708568055f46e5ffe52","permalink":"https://blog.dgraph.io/post/why-google-needed-graph-serving-system/","publishdate":"2019-02-13T19:49:00-08:00","readingtime":21,"relpermalink":"/post/why-google-needed-graph-serving-system/","section":"post","summary":"This post made it to #3 on HackerNews front page. Do engage in discussion there and show us love by giving us a GitHub star.\nWhen I introduce myself and explain what we are building at Dgraph Labs, I am typically asked if I worked at Facebook, or if what I\u0026rsquo;m building is inspired by Facebook. A lot of people know about the efforts at Facebook to serve their social graph, because they have published multiple articles about the graph infrastructure they put together.","tags":["Freebase","Google","Knowledge Graph","Metaweb","Hacker News"],"title":"Why Google Needed a Graph Serving System","type":"post","url":"/post/why-google-needed-graph-serving-system/","weight":0,"wordcount":4405},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1548792000,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548792000,"objectID":"","permalink":"https://blog.dgraph.io/tags/optimization/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/optimization/","section":"tags","summary":"","tags":null,"title":"Optimization","type":"tags","url":"/tags/optimization/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1548792000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2000,"image":"iss.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1548792000,"objectID":"9461b2752168cb9a3392b6d297e4ea2f","permalink":"https://blog.dgraph.io/post/indexing-in-dgraph/","publishdate":"2019-01-29T12:00:00-08:00","readingtime":10,"relpermalink":"/post/indexing-in-dgraph/","section":"post","summary":"One of the cornerstones of Dgraph is that it allows a flexible schema, which can be modified in a live system, without any downtime. This involves changing data types and adding or removing indices with a single ALTER command to match the needs of an application developer.\nDgraph supports indexing natively, which means common use cases around full-text search, regular expressions, date matching, geolocation queries, etc. can all be executed within Dgraph, while maintaining transactional guarantees.","tags":["Indexing","Optimization","Go"],"title":"Optimizing Indexing in Dgraph","type":"post","url":"/post/indexing-in-dgraph/","weight":0,"wordcount":1940},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1548352800,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548352800,"objectID":"","permalink":"https://blog.dgraph.io/tags/rocksdb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rocksdb/","section":"tags","summary":"","tags":null,"title":"RocksDB","type":"tags","url":"/tags/rocksdb/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1548352800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3900,"image":"keymaker.png","keywords":null,"kind":"page","lang":"en","lastmod":1548352800,"objectID":"e5c43f1ccf3a4d5a64d0152128f77ab0","permalink":"https://blog.dgraph.io/post/badger-over-rocksdb-in-dgraph/","publishdate":"2019-01-24T10:00:00-08:00","readingtime":19,"relpermalink":"/post/badger-over-rocksdb-in-dgraph/","section":"post","summary":"At Dgraph, we\u0026rsquo;re building the most advanced graph database in the world. It does distributed transactions, low-latency arbitrary depth joins, traversals, provides synchronous replication and horizontal scalability \u0026mdash; with a simple GraphQL-like API. Does it sounds like a tough problem? That\u0026rsquo;s because it is.\nThis blog post is about Badger, the key-value database that makes it all happen under the hood, housing all Dgraph data, including Raft logs. Badger uses an LSM tree structure for holding keys.","tags":["Badger","RocksDB"],"title":"Why we choose Badger over RocksDB in Dgraph","type":"post","url":"/post/badger-over-rocksdb-in-dgraph/","weight":0,"wordcount":3875},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1522750794,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":700,"image":"lightsaber.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1522750794,"objectID":"6e924a3777c092500cc9eecd68499773","permalink":"https://blog.dgraph.io/post/relicensing-dgraph/","publishdate":"2018-04-03T03:19:54-07:00","readingtime":3,"relpermalink":"/post/relicensing-dgraph/","section":"post","summary":"Last year, we had switched Dgraph license to AGPLv3.0, considering reasons like the ability to monetize in a competitive environment. In particular,\n The threat of duplicate commercial services and enterprise features built by others without paying anything back towards the development of the open source version.\nUpdate (Nov 2018): This post is outdated. Dgraph core is back to Apache 2.0, with no restrictions.\n This remains a credible threat; nothing has changed in that regard.","tags":null,"title":"Switching Dgraph to a Liberal License","type":"post","url":"/post/relicensing-dgraph/","weight":0,"wordcount":607},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1513665202,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"launch.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1513665202,"objectID":"1d4c2214294ce505fa210ad69aa4b14e","permalink":"https://blog.dgraph.io/post/releasing-v1.0/","publishdate":"2017-12-19T17:33:22+11:00","readingtime":7,"relpermalink":"/post/releasing-v1.0/","section":"post","summary":"Dgraph started around end-August, picked up steam in mid-October, and v0.1 was released in early-December, 2015. From one, the contributors grew to 46, with the project amassing over 4000 Github stars over the past two years. 2190 commits (we squash our branches), 277 branches and 25 releases later, we\u0026rsquo;re proud to announce that Dgraph has reached v1.0, our first production-ready release.\nTo give a bit of a background \u0026ndash; Dgraph, as a graph database, is designed to excel at the weaknesses of traditional relational databases: traversing relationships and efficiently executing complex joins at scale.","tags":null,"title":"Releasing Dgraph 1.0: Production-Ready Graph Database","type":"post","url":"/post/releasing-v1.0/","weight":0,"wordcount":1447},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1512111377,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"Neptune_Earth.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1512111377,"objectID":"57d09a56d35dfd727197311724ff4e7f","permalink":"https://blog.dgraph.io/post/neptune/","publishdate":"2017-12-01T17:56:17+11:00","readingtime":7,"relpermalink":"/post/neptune/","section":"post","summary":"Amazon just announced their new graph database service, called Amazon Neptune. As per a TechCrunch article,\n Amazon Neptune has been optimized to handle billions of relationships and run queries within milliseconds. Neptune supports fast-failover, point-in-time recovery and Multi-AZ deployments. And you can also encrypt data at rest.\n This is very exciting news for the entire tech ecosystem. It clearly shows that graph databases are going mainstream. Already many tech companies are using existing graph solutions or building their own graph-like systems.","tags":null,"title":"Open Source Alternative to Amazon Neptune","type":"post","url":"/post/neptune/","weight":0,"wordcount":1446},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1510633804,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1700,"image":"when_neutron_stars_collide.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1510633804,"objectID":"10228d886be1ea1b4fc7edb2ae35b5e1","permalink":"https://blog.dgraph.io/post/v0.9/","publishdate":"2017-11-14T15:30:04+11:00","readingtime":8,"relpermalink":"/post/v0.9/","section":"post","summary":"It all started with a Github issue.\nAt Dgraph, we really care about user feedback. Most of what we\u0026rsquo;ve built starting January 2017, has been based what our community (that\u0026rsquo;s you!) told us. The biggest contribution that we get from our community, is in the form of feedback. We\u0026rsquo;ll forgo any code contribution for quality feedback based on real-world usage.\nSince the beginning of Dgraph, transactions were road mapped as a post v1.","tags":null,"title":"Releasing distributed transactions in v0.9","type":"post","url":"/post/v0.9/","weight":0,"wordcount":1678},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1507532950,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1600,"image":"cassini.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1507532950,"objectID":"f1aa2bf0e405952fa2006278ff4a131f","permalink":"https://blog.dgraph.io/post/bulkloader/","publishdate":"2017-10-09T17:09:10+10:00","readingtime":8,"relpermalink":"/post/bulkloader/","section":"post","summary":"We\u0026rsquo;re seeing more and more users who want to load massive data sets into Dgraph. Many users want to load billions of edges, and some even want to load up to 50 billion edges! When we heard about the size of these datasets, we knew we needed to have a solid data loading story so that we could support the most extreme demands from our users.\nIn a previous blog post, we discussed some of the challenges that we met on our journey towards loading massive datasets into Dgraph.","tags":null,"title":"Loading close to 1M edges/sec into Dgraph","type":"post","url":"/post/bulkloader/","weight":0,"wordcount":1595},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1507170616,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1000,"image":"hubble_atom.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1507170616,"objectID":"c0747dcb70f6f6a4e789447ab563db79","permalink":"https://blog.dgraph.io/post/badger-txn/","publishdate":"2017-10-05T13:30:16+11:00","readingtime":5,"relpermalink":"/post/badger-txn/","section":"post","summary":"When we started working on Badger, the aim was to keep things stupid simple. We needed to get rid of Cgo from Dgraph codebase, while also building something which can perform really well. We wanted to create it for ourselves and the broader Go community. Go has been a language of choice for many databases, and providing a performant native Go key-value store seemed like a win for everyone.","tags":["Badger","Transactions"],"title":"Concurrent ACID Transactions in Badger","type":"post","url":"/post/badger-txn/","weight":0,"wordcount":934},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1507170616,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507170616,"objectID":"","permalink":"https://blog.dgraph.io/tags/transactions/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/transactions/","section":"tags","summary":"","tags":null,"title":"Transactions","type":"tags","url":"/tags/transactions/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1506997235,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":700,"image":"northwest.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1506997235,"objectID":"8b79f4a07e443c8792e45b72a01e833a","permalink":"https://blog.dgraph.io/post/sql-vs-nosql/","publishdate":"2017-10-03T13:20:35+11:00","readingtime":4,"relpermalink":"/post/sql-vs-nosql/","section":"post","summary":"Ajay Kulkarni, the co-founder of Timescale DB wrote an article about “Why SQL is beating NoSQL,” which became an instant hit. He made a compelling case about how SQL is making a comeback, citing Google Spanner and CockroachDB.\nThe analysis was mostly agreeable, except for one major flaw. It is not SQL which is making a comeback, its NoSQL which is morphing into providing a familiar interface.\nBigtable and MapReduce were developed to deal with an enormous amount of data at Google.","tags":["opinion"],"title":"[Opinion] SQL is not beating NoSQL. NoSQL is evolving.","type":"post","url":"/post/sql-vs-nosql/","weight":0,"wordcount":641},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1506997235,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506997235,"objectID":"","permalink":"https://blog.dgraph.io/tags/opinion/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/opinion/","section":"tags","summary":"","tags":null,"title":"opinion","type":"tags","url":"/tags/opinion/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1506902400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":300,"image":"atlantis-iss.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1506902400,"objectID":"e6c2b0eb38f1d6082950ec8f1c5c0cba","permalink":"https://blog.dgraph.io/post/basics-graphql/","publishdate":"2017-10-02T00:00:00Z","readingtime":2,"relpermalink":"/post/basics-graphql/","section":"post","summary":"Dgraph has its own custom query language based on GraphQL, called GraphQL+-. You can learn about the basics of GraphQL+- in our latest screencast that introduces you to writing queries in it, which can be found right below. The screencast will explore the content in the interactive tour it compliments, but in further depth. You can also subscribe to our YouTube channel if you would like to be posted when we release new videos.","tags":null,"title":"Learn the basics of GraphQL+-, now available on video","type":"post","url":"/post/basics-graphql/","weight":0,"wordcount":225},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1505865600,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3100,"image":"pia21778.png","keywords":null,"kind":"page","lang":"en","lastmod":1505865600,"objectID":"f6c86aa86e5294e2d15bf0af1fb3df9e","permalink":"https://blog.dgraph.io/post/badger-lmdb-boltdb/","publishdate":"2017-09-20T00:00:00Z","readingtime":15,"relpermalink":"/post/badger-lmdb-boltdb/","section":"post","summary":"If you have been following us, you may know that we released Badger a few months ago. Badger is a simple, efficient, and persistent key-value store, written in a hipster language. Even though it is not at v1.0 yet, we have already received a great response from the community. As of writing, Badger has 2350 stars on Github, and there have been lots of discussions online since the release announcement.","tags":["Badger","BoltDB"],"title":"Badger vs LMDB vs BoltDB: Benchmarking key-value databases in Go","type":"post","url":"/post/badger-lmdb-boltdb/","weight":0,"wordcount":3020},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1505865600,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1505865600,"objectID":"","permalink":"https://blog.dgraph.io/tags/boltdb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/boltdb/","section":"tags","summary":"","tags":null,"title":"BoltDB","type":"tags","url":"/tags/boltdb/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1502680885,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3800,"image":"galileo-jupiter.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1502680885,"objectID":"35cef14514d287691e8cacd2313cc438","permalink":"https://blog.dgraph.io/post/alice/","publishdate":"2017-08-14T13:21:25+10:00","readingtime":18,"relpermalink":"/post/alice/","section":"post","summary":"Crashes can occur for many different reasons and can manifest themselves in many different forms. A program can experience a segfault or uncaught exception. If it\u0026rsquo;s running on Linux, a kernel panic could occur. If on Windows, a STOP error could occur, displaying the infamous BSOD. Even then, crashes aren\u0026rsquo;t the only thing you have to worry about. The UPS could fail (or be absent), or the power could go out.","tags":null,"title":"Making Badger Crash Resilient with ALICE","type":"post","url":"/post/alice/","weight":0,"wordcount":3722},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1502177031,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2200,"image":"science.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1502177031,"objectID":"4e01ce443fba0714407b544914d3d571","permalink":"https://blog.dgraph.io/post/scaling-dgraph/","publishdate":"2017-08-08T17:23:51+10:00","readingtime":11,"relpermalink":"/post/scaling-dgraph/","section":"post","summary":"Starting v0.8, we have aimed to focus purely on the stability and performance of Dgraph. Our feature set is at this point good enough for most users \u0026ndash; so we\u0026rsquo;ve decided to freeze it until we reach v1.0.\nPart of ensuring stability and performance led us to try and load the entire Stack Overflow on Dgraph; around 2 billion edges. With full-text search, reverses and other indices, this jumps between 6-8 billion edges; which poses unique challenges.","tags":null,"title":"Scale the shit out of this!","type":"post","url":"/post/scaling-dgraph/","weight":0,"wordcount":2131},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1501632000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2600,"image":"graphoverflow-node-cover.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1501632000,"objectID":"722590ddbf52721d1069ecddce99037e","permalink":"https://blog.dgraph.io/post/building-graphoverflow/","publishdate":"2017-08-02T00:00:00Z","readingtime":12,"relpermalink":"/post/building-graphoverflow/","section":"post","summary":"\u003cp\u003eI have recently built a Stack Overflow clone with Dgraph and React. I was delightfully surprised by the pleasant developer experience and the performance of my application. In this post, I would like to tell the story of how I built \u003cem\u003eGraphoverflow\u003c/em\u003e and share the best practices I learned for using Dgraph to build a modern web application.\u003c/p\u003e","tags":null,"title":"Building a Stack Overflow Clone with Dgraph, and React","type":"post","url":"/post/building-graphoverflow/","weight":0,"wordcount":2532},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1500503040,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1200,"image":"spacex-stages.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1500503040,"objectID":"873d8601d1408f927df45b2f847ebe81","permalink":"https://blog.dgraph.io/post/signal-and-wait/","publishdate":"2017-07-19T15:24:00-07:00","readingtime":6,"relpermalink":"/post/signal-and-wait/","section":"post","summary":"\u003cp\u003eOne of the common use case in Go is to start a few goroutines to do some\nwork. These goroutines block listening in on a channel, waiting for more work to\narrive. At some point, you want to signal these goroutines to stop accepting\nmore work and exit, so you can cleanly shut down the program.\u003c/p\u003e","tags":null,"title":"Orchestrating signal and wait in Go","type":"post","url":"/post/signal-and-wait/","weight":0,"wordcount":1144},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1500249600,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3200,"image":"reddragonmars.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1500249600,"objectID":"e7965fb0023ac393da9718d22005ebd9","permalink":"https://blog.dgraph.io/post/sql-vs-dgraph/","publishdate":"2017-07-17T00:00:00Z","readingtime":15,"relpermalink":"/post/sql-vs-dgraph/","section":"post","summary":"We have been taught, conditioned, trained to use SQL all our lives as engineers. It was there in schools, there when we went to college. It was being used at the company that we joined. It was such a common interview question that it no longer is. We don\u0026rsquo;t have just one, but an array of SQL databases to choose from. MySQL was released 22 years ago, in 1995 (youngest engineer at Dgraph was born the same year).","tags":null,"title":"Running Stack Overflow on Dgraph","type":"post","url":"/post/sql-vs-dgraph/","weight":0,"wordcount":3100},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1498780800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3300,"image":"falconlanded.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1498780800,"objectID":"dfee71862ca1f6a1ae43ab77f9378377","permalink":"https://blog.dgraph.io/post/recommendation2/","publishdate":"2017-06-30T00:00:00Z","readingtime":16,"relpermalink":"/post/recommendation2/","section":"post","summary":"This is part 2 of a two-part series on recommendations using Dgraph. Check our part 1 here.\nIn the last post, we looked at how many applications and web apps no longer present static data, but rather generate interesting recommendations to users. There\u0026rsquo;s a whole field of theory and practice in recommendation engines that we touched on, talking about content-based (based on properties of objects) and collaborative (based on similar users) filtering techniques based on a chapter from Stanford MOOC Minning Massive Datasets.","tags":null,"title":"Build a Realtime Recommendation Engine: Part 2","type":"post","url":"/post/recommendation2/","weight":0,"wordcount":3268},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1498694400,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3300,"image":"falcon.png","keywords":null,"kind":"page","lang":"en","lastmod":1498694400,"objectID":"dba0b0a7c516b23d5d39f40e014036fc","permalink":"https://blog.dgraph.io/post/recommendation/","publishdate":"2017-06-29T00:00:00Z","readingtime":16,"relpermalink":"/post/recommendation/","section":"post","summary":"Preface In today\u0026rsquo;s world, user experience is paramount. It\u0026rsquo;s no longer about basic CRUD, just serving user data; it\u0026rsquo;s about mining the data to generate interesting predictions and suggesting actions to the user.\nThat\u0026rsquo;s the field of recommendations. They\u0026rsquo;re everywhere. In fact, they happen so frequently that you don\u0026rsquo;t even realize them.\nYou wake up and open Facebook, which shows you a feed of articles that it has chosen for you based on your viewing history.","tags":null,"title":"Build a Realtime Recommendation Engine: Part 1","type":"post","url":"/post/recommendation/","weight":0,"wordcount":3245},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1496016000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":500,"image":"arm.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1496016000,"objectID":"6a6691873f32ea5e285def3ee5ac2853","permalink":"https://blog.dgraph.io/post/goget/","publishdate":"2017-05-29T00:00:00Z","readingtime":3,"relpermalink":"/post/goget/","section":"post","summary":"Thank you Go community for all the love that you showered on Badger. Within 8 hours of announcing Badger, the blog post made it to the first page of Hacker News. And within three days, the Github repo received 1250 stars, having crossed 1500 by the time of this post. We have already merged contributions and received feedback that we need to work on.\nAll this goes to show how much people enjoy Go native libraries.","tags":null,"title":"go get github.com/dgraph-io/dgraph/...","type":"post","url":"/post/goget/","weight":0,"wordcount":489},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1494757095,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":3700,"image":"juno.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1494757095,"objectID":"014b338bd554ca7384d1cb3a218e9fb5","permalink":"https://blog.dgraph.io/post/badger/","publishdate":"2017-05-14T20:18:15+10:00","readingtime":18,"relpermalink":"/post/badger/","section":"post","summary":"We have built an efficient and persistent log structured merge (LSM) tree based key-value store, purely in Go language. It is based upon WiscKey paper included in USENIX FAST 2016. This design is highly SSD-optimized and separates keys from values to minimize I/O amplification; leveraging both the sequential and the random performance of SSDs.\nWe call it Badger. Based on benchmarks, Badger is at least 3.5x faster than RocksDB when doing random reads.","tags":["Badger","RocksDB","Hacker News"],"title":"Introducing Badger: A fast key-value store written purely in Go","type":"post","url":"/post/badger/","weight":0,"wordcount":3669},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1491819000,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2000,"image":"splitting-dunes.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1491819000,"objectID":"abddd222a4a63b041b460d83a7226d32","permalink":"https://blog.dgraph.io/post/string-matching/","publishdate":"2017-04-10T12:10:00+02:00","readingtime":10,"relpermalink":"/post/string-matching/","section":"post","summary":"\u003cp\u003eThe recent release of Dgraph is packed with new features and improvements.\nMany of them are related to strings - full text search (with support for 15 languages!) and regular expression matching have been added, and handling of string values in multiple languages was greatly improved.\nAll of these changes make Dgraph an excellent tool for working with multilingual applications.\u003c/p\u003e","tags":null,"title":"String matching in Dgraph v0.7.5","type":"post","url":"/post/string-matching/","weight":0,"wordcount":1944},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1490473800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1100,"image":"peoplelandingonmars.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1490473800,"objectID":"ca3ae724a7f24130831b05460c13b37e","permalink":"https://blog.dgraph.io/post/licensing/","publishdate":"2017-03-26T07:30:00+11:00","readingtime":5,"relpermalink":"/post/licensing/","section":"post","summary":"Dgraph started with the idea that every startup should be able to have the same level of technology as run by big giants. We designed Dgraph from ground-up to allow data sharding, horizontal scalability, consistent replication, and a fast and distributed architecture.\nUpdate (Apr 2018): Dgraph has switched back to Apache 2.0, with a Commons clause restriction. See new post here.\nWe also dream that graph database would no longer run as a secondary database.","tags":null,"title":"Building a long lasting company around open-source","type":"post","url":"/post/licensing/","weight":0,"wordcount":1023},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1485155264,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1485155264,"objectID":"","permalink":"https://blog.dgraph.io/tags/benchmark/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/benchmark/","section":"tags","summary":"","tags":null,"title":"Benchmark","type":"tags","url":"/tags/benchmark/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1485155264,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1485155264,"objectID":"","permalink":"https://blog.dgraph.io/tags/neo4j/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/neo4j/","section":"tags","summary":"","tags":null,"title":"Neo4j","type":"tags","url":"/tags/neo4j/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1485155264,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2300,"image":"potw1652a.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1485155264,"objectID":"77e3778893cdde925cb4f684c4a9339b","permalink":"https://blog.dgraph.io/post/benchmark-neo4j/","publishdate":"2017-01-23T18:07:44+11:00","readingtime":11,"relpermalink":"/post/benchmark-neo4j/","section":"post","summary":"\u003cp\u003eAs \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n is nearing its v0.8 release, we wanted to spend some time comparing it against Neo4j, which is the \u003ca href=\"http://db-engines.com/en/ranking/graph+dbms\"\u003emost popular graph database\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe have divided this post into five parts:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"#ref-loading-data\"\u003eLoading data\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#ref-querying\"\u003eQuerying\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#ref-issues-faced\"\u003eIssues faced\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#ref-feature-comparison\"\u003eDgraph vs Neo4j Feature Comparison\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#ref-dgraph-principles\"\u003ePrinciples behind Dgraph\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","tags":["Benchmark","Neo4j"],"title":"Neo4j vs Dgraph - The numbers speak for themselves","type":"post","url":"/post/benchmark-neo4j/","weight":0,"wordcount":2255},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1483606800,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"routeplan.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1483606800,"objectID":"5cb046a5a89b04456a2036bcd007213c","permalink":"https://blog.dgraph.io/post/v0.7-release/","publishdate":"2017-01-05T20:00:00+11:00","readingtime":7,"relpermalink":"/post/v0.7-release/","section":"post","summary":"\u003cp\u003e\u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n team is super excited to present v0.7.1 of \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n. This version is the biggest step we\u0026rsquo;ve taken towards our production aim of v1.0.\nWe\u0026rsquo;ve implemented \u003cstrong\u003e90% of all the features we had planned\u003c/strong\u003e in our \u003ca href=\"https://github.com/dgraph-io/dgraph/issues/1\"\u003eproduct roadmap\u003c/a\u003e, including replication and high-availability using RAFT protocol, indexing, filtering, sorting, geospatial queries, and backups.\u003c/p\u003e","tags":null,"title":"Releasing Dgraph v0.7.1","type":"post","url":"/post/v0.7-release/","weight":0,"wordcount":1487},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1475753168,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":300,"image":"blackholestar.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1475753168,"objectID":"894ecec029d0eb5908a28e83046e9787","permalink":"https://blog.dgraph.io/post/hugo/","publishdate":"2016-10-06T16:56:08+05:30","readingtime":2,"relpermalink":"/post/hugo/","section":"post","summary":"We at Dgraph love Hugo and use it for our blog. It\u0026rsquo;s blazingly fast, supports Markdown is written in Go and is very easy to work with. Initially, we were confused between Hugo vs. having a publication on Medium but later decided to go with Hugo because of the factors mentioned above. One of the things that we found lacking in the Hugo ecosystem was a good theme that we could use for our blog.","tags":null,"title":"Dgraph hugo blog theme","type":"post","url":"/post/hugo/","weight":0,"wordcount":240},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1475562597,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":700,"image":"rover-cmux.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1475562597,"objectID":"974c461857fb99b6680b5c94afa87215","permalink":"https://blog.dgraph.io/post/cmux/","publishdate":"2016-10-04T11:59:57+05:30","readingtime":3,"relpermalink":"/post/cmux/","section":"post","summary":"\u003cp\u003eEver faced the problem of having multiple ports in an application, one for each service?\nIn this post, I\u0026rsquo;m going to brief about how to run multiple services via the same listener port.\u003c/p\u003e","tags":null,"title":"Golang: Run multiple services on one port","type":"post","url":"/post/cmux/","weight":0,"wordcount":634},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1473657855,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"geminiview.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1473657855,"objectID":"b99240a73657dbea9623ff67ff1a5f61","permalink":"https://blog.dgraph.io/post/protobuf/","publishdate":"2016-09-12T10:54:15+05:30","readingtime":7,"relpermalink":"/post/protobuf/","section":"post","summary":"\u003cp\u003eWhen I started building the initial version of the \u003ca href=\"https://github.com/dgraph-io/dgraphgoclient\"\u003eDgraph Go client\u003c/a\u003e, we were looking for a serialization format which was fast, easy to use and supported multiple language runtimes. We finally implemented our client using \u003ca href=\"https://developers.google.com/protocol-buffers/\"\u003eProtocol Buffers\u003c/a\u003e which \u003cstrong\u003egave twice the speed and consumed two-third memory\u003c/strong\u003e compared to JSON according to our benchmarks.\u003c/p\u003e","tags":null,"title":"Dgraph: JSON vs. Binary clients","type":"post","url":"/post/protobuf/","weight":0,"wordcount":1424},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1469065984,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469065984,"objectID":"","permalink":"https://blog.dgraph.io/tags/gru/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gru/","section":"tags","summary":"","tags":null,"title":"Gru","type":"tags","url":"/tags/gru/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1469065984,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1600,"image":"gru.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1469065984,"objectID":"9c79500bf844cc8769d5ee3890367a10","permalink":"https://blog.dgraph.io/post/gru/","publishdate":"2016-07-21T11:53:04+10:00","readingtime":8,"relpermalink":"/post/gru/","section":"post","summary":"\u003cp\u003eCandidate \u003cstrong\u003eREJECTED\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e4 out of 5 interviewers had liked the candidate. I was one of the 4. He had received either above or very close to 3.0, which is a good score. The interviewer who didn\u0026rsquo;t like the candidate had been at Google since early 2004. And he didn\u0026rsquo;t like the candidate\u0026rsquo;s joke question about whether he was very rich because he joined before Google went IPO. \u003cem\u003eI guess he wasn\u0026rsquo;t.\u003c/em\u003e\u003c/p\u003e","tags":["Gru","Hiring"],"title":"Gru: Open source solution for better technical interviews","type":"post","url":"/post/gru/","weight":0,"wordcount":1589},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1469065984,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469065984,"objectID":"","permalink":"https://blog.dgraph.io/tags/hiring/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hiring/","section":"tags","summary":"","tags":null,"title":"Hiring","type":"tags","url":"/tags/hiring/","weight":0,"wordcount":0},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1468476974,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1200,"image":"cygnus-cargo.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1468476974,"objectID":"803d51512cfbad88ed09633660bd1763","permalink":"https://blog.dgraph.io/post/v0.4-release/","publishdate":"2016-07-14T16:16:14+10:00","readingtime":6,"relpermalink":"/post/v0.4-release/","section":"post","summary":"\u003cp\u003eThanks for your feedback over the last couple of months. This release addresses some of the main pain points of using \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n.\u003c/p\u003e","tags":null,"title":"Releasing v0.4","type":"post","url":"/post/v0.4-release/","weight":0,"wordcount":1132},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1466845605,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":2400,"image":"martian-encoding.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1466845605,"objectID":"9a485541b5da125a260bae3ecd615c64","permalink":"https://blog.dgraph.io/post/rpc-vs-grpc/","publishdate":"2016-06-25T19:06:45+10:00","readingtime":11,"relpermalink":"/post/rpc-vs-grpc/","section":"post","summary":"\u003cp\u003eAt \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n, we aim to build a low latency, distributed graph database.\nThis means our data is distributed among nodes in the cluster.\nExecuting a query means multiple nodes are communicating with each other.\nTo keep our latency of communication low, we use a new form of serialization library called \u003ca href=\"https://google.github.io/flatbuffers/\"\u003eFlatbuffers\u003c/a\u003e.\u003c/p\u003e","tags":null,"title":"Custom encoding: Go implementation in net/rpc vs grpc and why we switched","type":"post","url":"/post/rpc-vs-grpc/","weight":0,"wordcount":2314},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1466484632,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1500,"image":"lander.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1466484632,"objectID":"d77681284dd7c80b5bcccf0cf0a85055","permalink":"https://blog.dgraph.io/post/performance-throughput-latency/","publishdate":"2016-06-21T10:20:32+05:30","readingtime":7,"relpermalink":"/post/performance-throughput-latency/","section":"post","summary":"\u003cp\u003eIn this post, we’ll look at how \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n performs on varying the number of nodes in the cluster, specs of the machine and load on the server to answer the ultimate question: \u003cem\u003eCan it really scale?\u003c/em\u003e\u003c/p\u003e","tags":null,"title":"Can it really scale?","type":"post","url":"/post/performance-throughput-latency/","weight":0,"wordcount":1409},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1465954767,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1200,"image":"yoda.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1465954767,"objectID":"713729a373e2471ec82d3a89adb2b2f3","permalink":"https://blog.dgraph.io/post/wisemonk/","publishdate":"2016-06-15T11:39:27+10:00","readingtime":6,"relpermalink":"/post/wisemonk/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eThen there was the fact that we had so many channels and direct messages and group chats.\nIt multiplexed my brain and left me in a constant state of anxiety, feeling that I needed to always be on guard.\n\u003cem\u003e— \u003ca href=\"https://blog.agilebits.com/2016/04/19/curing-our-slack-addiction/\"\u003eDave Teare, Curing Our Slack Addiction\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e","tags":null,"title":"Wisemonk: A slackbot to move discussions from Slack to Discourse","type":"post","url":"/post/wisemonk/","weight":0,"wordcount":1100},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":1460954228,"description":"","dir":"post/","expirydate":-62135596800,"fuzzywordcount":1400,"image":"default.jpg","keywords":null,"kind":"page","lang":"en","lastmod":1460954228,"objectID":"149146edb9d37107f2905b865ce6ae17","permalink":"https://blog.dgraph.io/post/hello-world/","publishdate":"2016-04-18T14:37:08+10:00","readingtime":7,"relpermalink":"/post/hello-world/","section":"post","summary":"\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;m very excited\u003c/strong\u003e to use this first post to talk about \u003ca href=\"https://github.com/dgraph-io/dgraph\" target=\"_blank\"\u003eDgraph\u003c/a\u003e\n, what it is and why it was created.\u003c/p\u003e","tags":null,"title":"Hello, World!","type":"post","url":"/post/hello-world/","weight":0,"wordcount":1363},{"author":{"GivenName":"","FamilyName":"","DisplayName":"","Thumbnail":"","Image":"","ShortBio":"","LongBio":"","Email":"","Social":null},"categories":null,"date":-62135596800,"description":"","dir":"","expirydate":-62135596800,"fuzzywordcount":0,"image":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://blog.dgraph.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0}]